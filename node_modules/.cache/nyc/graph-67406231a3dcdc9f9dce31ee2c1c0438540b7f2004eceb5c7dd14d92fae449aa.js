function cov_403w1hslo(){var path="C:\\Users\\Ajoy\\workspace\\repos\\graph-mildshower\\src\\graph.js";var hash="062cea9895faea16e5c92e4dfbbf268bf2e592a4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Ajoy\\workspace\\repos\\graph-mildshower\\src\\graph.js",statementMap:{"0":{start:{line:7,column:22},end:{line:14,column:1}},"1":{start:{line:8,column:16},end:{line:8,column:18}},"2":{start:{line:9,column:2},end:{line:12,column:5}},"3":{start:{line:10,column:4},end:{line:10,column:46}},"4":{start:{line:11,column:4},end:{line:11,column:24}},"5":{start:{line:13,column:2},end:{line:13,column:15}},"6":{start:{line:16,column:12},end:{line:16,column:47}},"7":{start:{line:18,column:0},end:{line:18,column:40}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:22},end:{line:7,column:23}},loc:{start:{line:7,column:39},end:{line:14,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:16},end:{line:9,column:17}},loc:{start:{line:9,column:32},end:{line:12,column:3}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:12},end:{line:16,column:13}},loc:{start:{line:16,column:45},end:{line:16,column:47}},line:16}},branchMap:{"0":{loc:{start:{line:10,column:4},end:{line:10,column:45}},type:"binary-expr",locations:[{start:{line:10,column:4},end:{line:10,column:16}},{start:{line:10,column:21},end:{line:10,column:44}}],line:10}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"062cea9895faea16e5c92e4dfbbf268bf2e592a4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_403w1hslo=function(){return actualCoverage;};}return actualCoverage;}cov_403w1hslo();cov_403w1hslo().s[0]++;//Example
// Pairs => [[from,to],[to,from]]
// Source => from
// To => to
// Should return true.
const generateGraph=function(pairs){cov_403w1hslo().f[0]++;const nodes=(cov_403w1hslo().s[1]++,{});cov_403w1hslo().s[2]++;pairs.forEach(([from,to])=>{cov_403w1hslo().f[1]++;cov_403w1hslo().s[3]++;(cov_403w1hslo().b[0][0]++,!nodes[from])&&(cov_403w1hslo().b[0][1]++,nodes[from]=new Set());cov_403w1hslo().s[4]++;nodes[from].add(to);});cov_403w1hslo().s[5]++;return nodes;};cov_403w1hslo().s[6]++;const bfs=function(pairs,source,target){cov_403w1hslo().f[2]++;};cov_403w1hslo().s[7]++;module.exports={bfs,generateGraph};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYXBoLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlR3JhcGgiLCJwYWlycyIsIm5vZGVzIiwiZm9yRWFjaCIsImZyb20iLCJ0byIsIlNldCIsImFkZCIsImJmcyIsInNvdXJjZSIsInRhcmdldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiIydURBZVk7Z0hBZlo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLEtBQU1BLENBQUFBLGFBQWEsQ0FBRyxTQUFVQyxLQUFWLENBQWlCLHdCQUNyQyxLQUFNQyxDQUFBQSxLQUFLLHlCQUFHLEVBQUgsQ0FBWCxDQURxQyx1QkFFckNELEtBQUssQ0FBQ0UsT0FBTixDQUFjLENBQUMsQ0FBQ0MsSUFBRCxDQUFPQyxFQUFQLENBQUQsR0FBZ0IsK0NBQzVCLDRCQUFDSCxLQUFLLENBQUNFLElBQUQsQ0FBTiw4QkFBaUJGLEtBQUssQ0FBQ0UsSUFBRCxDQUFMLENBQWMsR0FBSUUsQ0FBQUEsR0FBSixFQUEvQixFQUQ0Qix1QkFFNUJKLEtBQUssQ0FBQ0UsSUFBRCxDQUFMLENBQVlHLEdBQVosQ0FBZ0JGLEVBQWhCLEVBQ0QsQ0FIRCxFQUZxQyx1QkFNckMsTUFBT0gsQ0FBQUEsS0FBUCxDQUNELENBUEQsQyx1QkFTQSxLQUFNTSxDQUFBQSxHQUFHLENBQUcsU0FBVVAsS0FBVixDQUFpQlEsTUFBakIsQ0FBeUJDLE1BQXpCLENBQWlDLHdCQUFFLENBQS9DLEMsdUJBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixDQUFFSixHQUFGLENBQU9SLGFBQVAsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvL0V4YW1wbGVcbi8vIFBhaXJzID0+IFtbZnJvbSx0b10sW3RvLGZyb21dXVxuLy8gU291cmNlID0+IGZyb21cbi8vIFRvID0+IHRvXG4vLyBTaG91bGQgcmV0dXJuIHRydWUuXG5cbmNvbnN0IGdlbmVyYXRlR3JhcGggPSBmdW5jdGlvbiAocGFpcnMpIHtcbiAgY29uc3Qgbm9kZXMgPSB7fTtcbiAgcGFpcnMuZm9yRWFjaCgoW2Zyb20sIHRvXSkgPT4ge1xuICAgICFub2Rlc1tmcm9tXSAmJiAobm9kZXNbZnJvbV0gPSBuZXcgU2V0KCkpO1xuICAgIG5vZGVzW2Zyb21dLmFkZCh0byk7XG4gIH0pO1xuICByZXR1cm4gbm9kZXM7XG59O1xuXG5jb25zdCBiZnMgPSBmdW5jdGlvbiAocGFpcnMsIHNvdXJjZSwgdGFyZ2V0KSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSB7IGJmcywgZ2VuZXJhdGVHcmFwaCB9O1xuIl19